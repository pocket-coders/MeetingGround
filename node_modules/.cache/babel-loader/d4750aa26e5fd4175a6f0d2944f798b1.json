{"ast":null,"code":"var _jsxFileName = \"/Users/talbachar/Desktop/MeetingGround/src/calendar/connect.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { config } from \"../apiGoogleconfig.json\";\nimport moment from \"moment\";\nimport MyCalendar from \"../pages/Moment\";\nimport styled from \"@emotion/styled\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport { gql, useMutation } from \"@apollo/client\";\nexport { ApolloClient } from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { HttpLink } from \"apollo-link-http\"; //yarn add @types/gapi\n//yarn add @types/gapi.auth2\n//yarn add @types/gapi.client.calendar\n\nconst append_host_to_db = gql`\n  mutation addHost(\n    $fname: String!\n    $lname: String!\n    $email: String!\n    $GOA_code: String!\n  ) {\n    addHost(Fname: $fname, Lname: $lname, email: $email, GOA_code: $GOA_code) {\n      Lname\n      email\n    }\n  }\n`;\nconst cache = new InMemoryCache();\nconst link = new HttpLink({\n  uri: \"http://localhost:4001/graphql\"\n}); // const client = new ApolloClient({\n//   cache,\n//   link,\n// });\n\nconst ConnectPage = () => {\n  const [isSigned, setIsSigned] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [picUrl, setPicUrl] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [fname, setFname] = useState(\"\");\n  const [lname, setLname] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [myEvents, setMyEvents] = useState([]);\n  const [authorizeButton, setAuthorizeButton] = useState(\"\");\n  const [signoutButton, setSignoutButton] = useState(\"\");\n  const [mutate, {\n    data\n  }] = useMutation(append_host_to_db);\n  /**\n   *  On load, called to load the auth2 library and API client library.\n   */\n\n  useEffect(() => {\n    gapi.load(\"client:auth2\", initClient);\n  }, []); // --> [] call the function only one time at the beginning\n  // function handleClientLoad() {\n  //   gapi.load(\"client:auth2\", initClient);\n  // }\n\n  /**\n   *  Initializes the API client library and sets up sign-in state\n   *  listeners.\n   */\n\n  function initClient() {\n    gapi.client.init({\n      apiKey: config.apiKey,\n      clientId: config.clientId,\n      discoveryDocs: config.discoveryDocs,\n      scope: config.scope\n    }).then(function () {\n      // Listen for sign-in state changes.\n      gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus); // Handle the initial sign-in state.\n\n      updateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get()); //authorizeButton.onclick = handleAuthClick;\n      //signoutButton.onclick = handleSignoutClick;\n    }, function (error) {\n      // setMessage(JSON.stringify(error, null, 2));\n      // const temp: string = JSON.stringify(error, null, 2);\n      // message += temp;\n      appendPre(JSON.stringify(error, null, 2));\n    });\n  }\n  /**\n   *  Sign in the user upon button click.\n   */\n\n\n  function handleAuthClick(event) {\n    // Granting access when the user is offline\n    gapi.auth2.getAuthInstance().grantOfflineAccess().then(function (response) {\n      gapi.auth2.getAuthInstance().signIn();\n\n      if (response.code) {\n        // Hide the sign-in button now that the user is authorized, for example:\n        setAuthorizeButton(\"none\"); //$(\"#signinButton\").attr(\"style\", \"display: none\");\n\n        console.log(response);\n        addHostToDB(response, fname, lname, email);\n        console.log(\"After host added/found\");\n      } else {\n        console.log(\"THERE WAS AN ERROR\");\n      }\n    }); //gapi.auth2.getAuthInstance().signIn();\n  } //checks if host already exists using func, if not, add host\n\n\n  async function addHostToDB(response, fname, lname, email) {\n    // GOA_code --> Google Offline Access code\n    const arg = await mutate({\n      variables: {\n        GOA_code: response,\n        fname,\n        lname,\n        email\n      }\n    });\n    console.log(arg);\n  }\n  /**\n   *  Sign out the user upon button click.\n   */\n\n\n  function handleSignoutClick(event) {\n    gapi.auth2.getAuthInstance().signOut();\n  } //calendar.settings.readonly scope allowed\n\n  /**\n   *  Called when the signed in status changes, to update the UI\n   *  appropriately. After a sign-in, the API is called.\n   */\n\n\n  function updateSigninStatus(isSignedIn) {\n    if (isSignedIn) {\n      setAuthorizeButton(\"none\");\n      setSignoutButton(\"block\");\n      setIsSigned(true);\n      setName(gapi.auth2.getAuthInstance().currentUser.get().getBasicProfile().getName());\n      setFname(gapi.auth2.getAuthInstance().currentUser.get().getBasicProfile().getGivenName());\n      setLname(gapi.auth2.getAuthInstance().currentUser.get().getBasicProfile().getFamilyName());\n      setEmail(gapi.auth2.getAuthInstance().currentUser.get().getBasicProfile().getEmail());\n      setPicUrl(gapi.auth2.getAuthInstance().currentUser.get().getBasicProfile().getImageUrl());\n      listUpcomingEvents();\n      console.log(\"SIGNED IN\");\n    } else {\n      console.log(\"SIGNED OUT\");\n      setIsSigned(false);\n      setName(\"\");\n      setPicUrl(\"\");\n      setFname(\"\");\n      setLname(\"\");\n      setEmail(\"\");\n      setAuthorizeButton(\"block\");\n      setSignoutButton(\"none\");\n    }\n  } // /**\n  //  * Append a pre element to the body containing the given message\n  //  * as its text node. Used to display the results of the API call.\n  //  *\n  //  * @param {string} message Text to be placed in pre element.\n  //  */\n\n\n  function appendPre(message) {\n    const pre = document.getElementById(\"content\");\n    const textContent = document.createTextNode(message + \"\\n\");\n    pre.appendChild(textContent);\n  }\n\n  const CalendarCard = styled.div`\n    margin: 0 auto;\n    width: 1000px;\n    height: 1000px;\n    align-items: center;\n    border-radius: 15px;\n  `;\n  /**\n   * Print the summary and start datetime/date of the next ten events in\n   * the authorized user's calendar. If no events are found an\n   * appropriate message is printed.\n   */\n\n  function listUpcomingEvents() {\n    gapi.client.calendar.events.list({\n      calendarId: \"primary\",\n      timeMin: new Date().toISOString(),\n      showDeleted: false,\n      singleEvents: true,\n      maxResults: 10,\n      orderBy: \"startTime\"\n    }).then(function (response) {\n      const events = response.result.items;\n      const appointments = response.result.items;\n\n      for (let j = 0; j < appointments.length; j++) {\n        appointments[j].start = moment.utc(appointments[j].start.dateTime).toDate();\n        appointments[j].end = moment.utc(appointments[j].end.dateTime).toDate();\n      }\n\n      setMyEvents(appointments); //setMyEvents(events);\n      // debugger;\n\n      const tmp = message;\n      setMessage(tmp + \"Upcoming events:\" + \"\\n\"); // message += \"Upcoming events:\" + \"\\n\";\n\n      appendPre(\"Upcoming events:\");\n      console.log(events.length);\n\n      if (events.length > 0) {\n        let i;\n\n        for (i = 0; i < events.length; i++) {\n          let event = events[i];\n          let when = event.start.dateTime;\n\n          if (!when) {\n            when = event.start.date;\n          }\n\n          const temp = message + event.summary + \" (\" + when + \")\" + \"\\n\";\n          setMessage(temp); // message += temp;\n\n          appendPre(event.summary + \" (\" + when + \")\");\n        }\n      } else {\n        setMessage(\"No upcoming events found.\" + \"\\n\"); // message += \"No upcoming events found.\" + \"\\n\";\n\n        appendPre(\"No upcoming events found.\");\n      }\n    });\n  } // handleClientLoad();\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    id: \"logo\",\n    src: \"./logo.png\",\n    alt: \"Meeting Ground Logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 9\n    }\n  }, \"Welcome to Meeting Ground\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 9\n    }\n  }, \"Where Meetings hit the Ground\"), /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 9\n    }\n  }, \"Main Page\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    id: \"authorize_button\",\n    onClick: handleAuthClick,\n    style: {\n      display: authorizeButton\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 9\n    }\n  }, \"Sign in\"), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"signout_button\",\n    onClick: handleSignoutClick,\n    style: {\n      display: signoutButton\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 9\n    }\n  }, \"Sign Out\")), isSigned && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 13\n    }\n  }, \"Welcome \", name), /*#__PURE__*/React.createElement(\"img\", {\n    src: picUrl,\n    alt: \"Avatar.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    id: \"continue\",\n    href: \"http://localhost:3000/home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 15\n    }\n  }, \"continue to Meeting Ground\"))), /*#__PURE__*/React.createElement(\"pre\", {\n    id: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CalendarCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MyCalendar, {\n    myList: myEvents,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default ConnectPage;","map":{"version":3,"sources":["/Users/talbachar/Desktop/MeetingGround/src/calendar/connect.tsx"],"names":["React","useState","useEffect","config","moment","MyCalendar","styled","gql","useMutation","ApolloClient","InMemoryCache","HttpLink","append_host_to_db","cache","link","uri","ConnectPage","isSigned","setIsSigned","name","setName","picUrl","setPicUrl","email","setEmail","fname","setFname","lname","setLname","message","setMessage","myEvents","setMyEvents","authorizeButton","setAuthorizeButton","signoutButton","setSignoutButton","mutate","data","gapi","load","initClient","client","init","apiKey","clientId","discoveryDocs","scope","then","auth2","getAuthInstance","isSignedIn","listen","updateSigninStatus","get","error","appendPre","JSON","stringify","handleAuthClick","event","grantOfflineAccess","response","signIn","code","console","log","addHostToDB","arg","variables","GOA_code","handleSignoutClick","signOut","currentUser","getBasicProfile","getName","getGivenName","getFamilyName","getEmail","getImageUrl","listUpcomingEvents","pre","document","getElementById","textContent","createTextNode","appendChild","CalendarCard","div","calendar","events","list","calendarId","timeMin","Date","toISOString","showDeleted","singleEvents","maxResults","orderBy","result","items","appointments","j","length","start","utc","dateTime","toDate","end","tmp","i","when","date","temp","summary","padding","display"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { config } from \"../apiGoogleconfig.json\";\nimport moment from \"moment\";\nimport MyCalendar from \"../pages/Moment\";\nimport styled from \"@emotion/styled\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport { gql, useMutation, ApolloProvider } from \"@apollo/client\";\nexport { ApolloClient } from \"apollo-client\";\nimport { InMemoryCache, NormalizedCacheObject } from \"apollo-cache-inmemory\";\nimport { HttpLink } from \"apollo-link-http\";\n\n//yarn add @types/gapi\n//yarn add @types/gapi.auth2\n//yarn add @types/gapi.client.calendar\nconst append_host_to_db = gql`\n  mutation addHost(\n    $fname: String!\n    $lname: String!\n    $email: String!\n    $GOA_code: String!\n  ) {\n    addHost(Fname: $fname, Lname: $lname, email: $email, GOA_code: $GOA_code) {\n      Lname\n      email\n    }\n  }\n`;\n\nconst cache = new InMemoryCache();\n\nconst link = new HttpLink({\n  uri: \"http://localhost:4001/graphql\",\n});\n\n// const client = new ApolloClient({\n//   cache,\n//   link,\n// });\n\nconst ConnectPage = () => {\n  const [isSigned, setIsSigned] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [picUrl, setPicUrl] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [fname, setFname] = useState(\"\");\n  const [lname, setLname] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [myEvents, setMyEvents] = useState<any[]>([]);\n  const [authorizeButton, setAuthorizeButton] = useState(\"\");\n  const [signoutButton, setSignoutButton] = useState(\"\");\n\n  const [mutate, { data }] = useMutation(append_host_to_db);\n\n  /**\n   *  On load, called to load the auth2 library and API client library.\n   */\n  useEffect(() => {\n    gapi.load(\"client:auth2\", initClient);\n  }, []);\n\n  // --> [] call the function only one time at the beginning\n  // function handleClientLoad() {\n  //   gapi.load(\"client:auth2\", initClient);\n  // }\n\n  /**\n   *  Initializes the API client library and sets up sign-in state\n   *  listeners.\n   */\n  function initClient() {\n    gapi.client\n      .init({\n        apiKey: config.apiKey,\n        clientId: config.clientId,\n        discoveryDocs: config.discoveryDocs,\n        scope: config.scope,\n      })\n      .then(\n        function () {\n          // Listen for sign-in state changes.\n          gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus);\n\n          // Handle the initial sign-in state.\n          updateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get());\n          //authorizeButton.onclick = handleAuthClick;\n          //signoutButton.onclick = handleSignoutClick;\n        },\n        function (error: any) {\n          // setMessage(JSON.stringify(error, null, 2));\n          // const temp: string = JSON.stringify(error, null, 2);\n          // message += temp;\n          appendPre(JSON.stringify(error, null, 2));\n        }\n      );\n  }\n\n  /**\n   *  Sign in the user upon button click.\n   */\n  function handleAuthClick(event: any) {\n    // Granting access when the user is offline\n    gapi.auth2\n      .getAuthInstance()\n      .grantOfflineAccess()\n      .then(function (response: any) {\n        gapi.auth2.getAuthInstance().signIn();\n        if (response.code) {\n          // Hide the sign-in button now that the user is authorized, for example:\n          setAuthorizeButton(\"none\");\n          //$(\"#signinButton\").attr(\"style\", \"display: none\");\n          console.log(response);\n          addHostToDB(response, fname, lname, email);\n          console.log(\"After host added/found\");\n        } else {\n          console.log(\"THERE WAS AN ERROR\");\n        }\n      });\n    //gapi.auth2.getAuthInstance().signIn();\n  }\n  //checks if host already exists using func, if not, add host\n  async function addHostToDB(\n    response: String,\n    fname: String,\n    lname: String,\n    email: String\n  ) {\n    // GOA_code --> Google Offline Access code\n    const arg = await mutate({\n      variables: { GOA_code: response, fname, lname, email },\n    });\n    console.log(arg);\n  }\n\n  /**\n   *  Sign out the user upon button click.\n   */\n  function handleSignoutClick(event: any) {\n    gapi.auth2.getAuthInstance().signOut();\n  }\n\n  //calendar.settings.readonly scope allowed\n  /**\n   *  Called when the signed in status changes, to update the UI\n   *  appropriately. After a sign-in, the API is called.\n   */\n  function updateSigninStatus(isSignedIn: boolean) {\n    if (isSignedIn) {\n      setAuthorizeButton(\"none\");\n      setSignoutButton(\"block\");\n      setIsSigned(true);\n      setName(\n        gapi.auth2\n          .getAuthInstance()\n          .currentUser.get()\n          .getBasicProfile()\n          .getName()\n      );\n      setFname(\n        gapi.auth2\n          .getAuthInstance()\n          .currentUser.get()\n          .getBasicProfile()\n          .getGivenName()\n      );\n      setLname(\n        gapi.auth2\n          .getAuthInstance()\n          .currentUser.get()\n          .getBasicProfile()\n          .getFamilyName()\n      );\n      setEmail(\n        gapi.auth2\n          .getAuthInstance()\n          .currentUser.get()\n          .getBasicProfile()\n          .getEmail()\n      );\n      setPicUrl(\n        gapi.auth2\n          .getAuthInstance()\n          .currentUser.get()\n          .getBasicProfile()\n          .getImageUrl()\n      );\n      listUpcomingEvents();\n      console.log(\"SIGNED IN\");\n    } else {\n      console.log(\"SIGNED OUT\");\n      setIsSigned(false);\n      setName(\"\");\n      setPicUrl(\"\");\n      setFname(\"\");\n      setLname(\"\");\n      setEmail(\"\");\n      setAuthorizeButton(\"block\");\n      setSignoutButton(\"none\");\n    }\n  }\n\n  // /**\n  //  * Append a pre element to the body containing the given message\n  //  * as its text node. Used to display the results of the API call.\n  //  *\n  //  * @param {string} message Text to be placed in pre element.\n  //  */\n  function appendPre(message: string) {\n    const pre = document.getElementById(\"content\") as HTMLElement;\n    const textContent = document.createTextNode(message + \"\\n\");\n    pre.appendChild(textContent);\n  }\n\n  const CalendarCard = styled.div`\n    margin: 0 auto;\n    width: 1000px;\n    height: 1000px;\n    align-items: center;\n    border-radius: 15px;\n  `;\n\n  /**\n   * Print the summary and start datetime/date of the next ten events in\n   * the authorized user's calendar. If no events are found an\n   * appropriate message is printed.\n   */\n  function listUpcomingEvents() {\n    gapi.client.calendar.events\n      .list({\n        calendarId: \"primary\",\n        timeMin: new Date().toISOString(),\n        showDeleted: false,\n        singleEvents: true,\n        maxResults: 10,\n        orderBy: \"startTime\",\n      })\n      .then(function (response: any) {\n        const events: any[] = response.result.items;\n        const appointments = response.result.items;\n        for (let j = 0; j < appointments.length; j++) {\n          appointments[j].start = moment\n            .utc(appointments[j].start.dateTime)\n            .toDate();\n          appointments[j].end = moment\n            .utc(appointments[j].end.dateTime)\n            .toDate();\n        }\n        setMyEvents(appointments);\n\n        //setMyEvents(events);\n        // debugger;\n        const tmp: string = message;\n        setMessage(tmp + \"Upcoming events:\" + \"\\n\");\n        // message += \"Upcoming events:\" + \"\\n\";\n        appendPre(\"Upcoming events:\");\n        console.log(events.length);\n        if (events.length > 0) {\n          let i: number;\n          for (i = 0; i < events.length; i++) {\n            let event = events[i];\n            let when = event.start.dateTime;\n            if (!when) {\n              when = event.start.date;\n            }\n            const temp: string =\n              message + event.summary + \" (\" + when + \")\" + \"\\n\";\n            setMessage(temp);\n            // message += temp;\n            appendPre(event.summary + \" (\" + when + \")\");\n          }\n        } else {\n          setMessage(\"No upcoming events found.\" + \"\\n\");\n          // message += \"No upcoming events found.\" + \"\\n\";\n          appendPre(\"No upcoming events found.\");\n        }\n      });\n  }\n\n  // handleClientLoad();\n  return (\n    <div style={{ padding: \"1rem\" }}>\n      <div>\n        <img id=\"logo\" src=\"./logo.png\" alt=\"Meeting Ground Logo\" />\n        <h1>Welcome to Meeting Ground</h1>\n        <h2>Where Meetings hit the Ground</h2>\n        <small>Main Page</small>\n      </div>\n      <div>\n        <button\n          id=\"authorize_button\"\n          onClick={handleAuthClick}\n          style={{ display: authorizeButton }}\n        >\n          Sign in\n        </button>\n        <button\n          id=\"signout_button\"\n          onClick={handleSignoutClick}\n          style={{ display: signoutButton }}\n        >\n          Sign Out\n        </button>\n      </div>\n\n      {isSigned && (\n        <div>\n          <div>\n            <h1>Welcome {name}</h1>\n            <img src={picUrl} alt=\"Avatar.\" />\n            <p>\n              <a id=\"continue\" href=\"http://localhost:3000/home\">\n                continue to Meeting Ground\n              </a>\n            </p>\n          </div>\n          <pre id=\"content\"></pre>\n          <CalendarCard>\n            <MyCalendar myList={myEvents} />\n          </CalendarCard>\n        </div>\n      )}\n    </div>\n  );\n};\nexport default ConnectPage;\n"]},"metadata":{},"sourceType":"module"}