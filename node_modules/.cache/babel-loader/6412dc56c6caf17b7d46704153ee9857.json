{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { useEffect, useRef, useState } from 'react';\nimport { useApolloClient } from './ApolloContext';\nimport actHack from './internal/actHack';\nimport { objToKey } from './utils';\nexport function useSubscription(query, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      onSubscriptionData = _ref.onSubscriptionData,\n      overrideClient = _ref.client,\n      options = _objectWithoutPropertiesLoose(_ref, [\"onSubscriptionData\", \"client\"]);\n\n  var client = useApolloClient(overrideClient);\n  var onSubscriptionDataRef = useRef(null);\n\n  var _useState = useState({\n    loading: true\n  }),\n      result = _useState[0],\n      setResultBase = _useState[1];\n\n  onSubscriptionDataRef.current = onSubscriptionData;\n\n  function setResult(newResult) {\n    // A hack to get rid React warnings during tests.\n    actHack(function () {\n      setResultBase(newResult);\n    });\n  }\n\n  useEffect(function () {\n    if (options.skip === true) {\n      return;\n    }\n\n    var subscription = client.subscribe(_extends({}, options, {\n      query: query\n    })).subscribe(function (nextResult) {\n      var newResult = {\n        data: nextResult.data,\n        error: undefined,\n        loading: false\n      };\n      setResult(newResult);\n\n      if (onSubscriptionDataRef.current) {\n        onSubscriptionDataRef.current({\n          client: client,\n          subscriptionData: newResult\n        });\n      }\n    }, function (error) {\n      setResult({\n        loading: false,\n        data: result.data,\n        error: error\n      });\n    });\n    return function () {\n      setResult({\n        loading: true\n      });\n      subscription.unsubscribe();\n    };\n  }, [query, options && objToKey(options)]);\n  return result;\n}","map":{"version":3,"sources":["/Users/talbachar/Desktop/MeetingGround/node_modules/react-apollo-hooks/es/useSubscription.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","useEffect","useRef","useState","useApolloClient","actHack","objToKey","useSubscription","query","_temp","_ref","onSubscriptionData","overrideClient","client","options","onSubscriptionDataRef","_useState","loading","result","setResultBase","current","setResult","newResult","skip","subscription","subscribe","nextResult","data","error","undefined","subscriptionData","unsubscribe"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { useEffect, useRef, useState } from 'react';\nimport { useApolloClient } from './ApolloContext';\nimport actHack from './internal/actHack';\nimport { objToKey } from './utils';\nexport function useSubscription(query, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      onSubscriptionData = _ref.onSubscriptionData,\n      overrideClient = _ref.client,\n      options = _objectWithoutPropertiesLoose(_ref, [\"onSubscriptionData\", \"client\"]);\n\n  var client = useApolloClient(overrideClient);\n  var onSubscriptionDataRef = useRef(null);\n\n  var _useState = useState({\n    loading: true\n  }),\n      result = _useState[0],\n      setResultBase = _useState[1];\n\n  onSubscriptionDataRef.current = onSubscriptionData;\n\n  function setResult(newResult) {\n    // A hack to get rid React warnings during tests.\n    actHack(function () {\n      setResultBase(newResult);\n    });\n  }\n\n  useEffect(function () {\n    if (options.skip === true) {\n      return;\n    }\n\n    var subscription = client.subscribe(_extends({}, options, {\n      query: query\n    })).subscribe(function (nextResult) {\n      var newResult = {\n        data: nextResult.data,\n        error: undefined,\n        loading: false\n      };\n      setResult(newResult);\n\n      if (onSubscriptionDataRef.current) {\n        onSubscriptionDataRef.current({\n          client: client,\n          subscriptionData: newResult\n        });\n      }\n    }, function (error) {\n      setResult({\n        loading: false,\n        data: result.data,\n        error: error\n      });\n    });\n    return function () {\n      setResult({\n        loading: true\n      });\n      subscription.unsubscribe();\n    };\n  }, [query, options && objToKey(options)]);\n  return result;\n}"]},"metadata":{},"sourceType":"module"}