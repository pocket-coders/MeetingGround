{"ast":null,"code":"var _jsxFileName = \"/Users/talbachar/Desktop/MeetingGround/src/App.tsx\";\n\n/*App.js*/\nimport React, { Component } from \"react\";\nimport \"./App.css\"; //Import all needed Component for this tutorial\n//npm install react-router-dom --save\n\nimport { BrowserRouter as Router, Route, Switch // Link,\n, Redirect } from \"react-router-dom\"; //Pages\n\n///< index.jsx will be automatically imported\n//And render that route with the MainPage component for the root path /\nimport HomePage from \"./pages/home\";\nimport NotFoundPage from \"./pages/404\";\nimport SignUpPage from \"./pages/signup\";\nimport ConnectPage from \"./calendar/connect\";\nimport SubmitInfoPage from \"./pages/submitInfo\";\nimport ConfirmationPage from \"./pages/confirmation\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { ApolloClient } from \"apollo-client\";\nimport { ApolloProvider } from \"react-apollo\";\nconst link = new HttpLink({\n  uri: \"http://localhost:4001/graphql\"\n});\nconst cache = new InMemoryCache();\nconst client = new ApolloClient({\n  cache,\n  link\n});\n\nclass App extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(ApolloProvider, {\n      client: client,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: ConnectPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      component: ConnectPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/home\",\n      component: HomePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/404\",\n      component: NotFoundPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/signup/:id\",\n      component: SignUpPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/connect\",\n      component: ConnectPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/submit-info/:id/:time\",\n      component: SubmitInfoPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/confirmation\",\n      component: ConfirmationPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/404\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/talbachar/Desktop/MeetingGround/src/App.tsx"],"names":["React","Component","BrowserRouter","Router","Route","Switch","Redirect","HomePage","NotFoundPage","SignUpPage","ConnectPage","SubmitInfoPage","ConfirmationPage","HttpLink","InMemoryCache","ApolloClient","ApolloProvider","link","uri","cache","client","App","render"],"mappings":"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","sourcesContent":["/*App.js*/\nimport React, { Component, useState } from \"react\";\nimport \"./App.css\";\n//Import all needed Component for this tutorial\n//npm install react-router-dom --save\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  // Link,\n  Redirect,\n} from \"react-router-dom\";\n\n//Pages\nimport LoginPage from \"./pages/login\"; ///< index.jsx will be automatically imported\n//And render that route with the MainPage component for the root path /\n\nimport HomePage from \"./pages/home\";\nimport NotFoundPage from \"./pages/404\";\nimport SignUpPage from \"./pages/signup\";\nimport Server from \"./server/server\";\nimport ConnectPage from \"./calendar/connect\";\nimport SubmitInfoPage from \"./pages/submitInfo\";\nimport ConfirmationPage from \"./pages/confirmation\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { InMemoryCache, NormalizedCacheObject } from \"apollo-cache-inmemory\";\nimport { ApolloClient } from \"apollo-client\";\nimport { ApolloProvider } from \"react-apollo\";\n\nconst link = new HttpLink({\n  uri: \"http://localhost:4001/graphql\",\n});\nconst cache = new InMemoryCache();\n\nconst client: ApolloClient<NormalizedCacheObject> = new ApolloClient({\n  cache,\n  link,\n});\n\nclass App extends Component {\n  render() {\n    return (\n      <ApolloProvider client={client}>\n        <Router>\n          {/*All our Routes goes here!*/}\n          <Switch>\n            <Route exact path=\"/\" component={ConnectPage} />\n            <Route exact path=\"/login\" component={ConnectPage} />\n            <Route exact path=\"/home\" component={HomePage} />\n            <Route exact path=\"/404\" component={NotFoundPage} />\n            <Route exact path=\"/signup/:id\" component={SignUpPage} />\n            {/* <Route exact path=\"/server\" component={Server} /> */}\n            <Route exact path=\"/connect\" component={ConnectPage} />\n            <Route\n              exact\n              path=\"/submit-info/:id/:time\"\n              component={SubmitInfoPage}\n            />\n            <Route exact path=\"/confirmation\" component={ConfirmationPage} />\n            {/*Check for link in server. if exists go to  SchedulePage -> userid*/}\n            <Redirect to=\"/404\" />\n          </Switch>\n        </Router>\n      </ApolloProvider>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}