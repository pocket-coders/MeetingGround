{"ast":null,"code":"var _jsxFileName = \"/Users/kimberlyzhu/Documents/MeetingGround/src/pages/submitInfo.tsx\";\n\n/*users.jsx*/\nimport useForm from \"react-hook-form\";\n//You have to use the link component to link between you pages\nimport styled from \"@emotion/styled\";\nimport logo from \"./img/meetingGroundLogo.png\";\nimport React, { useState } from \"react\"; // yarn add react-hook-form\n//You have to use the link component to link between you pages\n\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport { ApolloClient } from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { ApolloProvider } from \"react-apollo\";\nimport * as config from \"../apiGoogleconfig.json\";\nconst LogoCard = styled.img`\n  width: 450px;\n  height: 100px;\n  justify-content: space-around;\n  float: left;\n`;\nconst TopFormat = styled.div`\n  margin: 0 auto;\n  width: 100%;\n  overflow: auto;\n  display: inline-block;\n  background: white;\n  border-radius: 25px;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n`;\nconst MainBodyFormat = styled.div`\n  margin: 0 auto;\n  align-items: center;\n  background: white;\n  display: flex;\n  flex-direction: column;\n  height: 650px;\n  border-radius: 25px;\n`;\nconst Inputformat = styled.input`\n  width: 100%;\n  padding: 10px 20px;\n  margin: 8px 0;\n  display: inline-block;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  box-sizing: border-box;\n`;\nconst meetingInfo = {\n  hostEmail: \"\",\n  duration: 0\n};\nconst urlId = {\n  urlid: \"\"\n};\n\nconst SubmitInfoPage = props => {\n  const id = props.match.params.id; //link id\n\n  const scheduledDate = new Date(props.match.params.time.replace(\"%20\", \"\"));\n  urlId.urlid = id;\n  const {\n    register,\n    handleSubmit\n  } = useForm({\n    defaultValues: {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      comments: \"\"\n    }\n  });\n  const cache = new InMemoryCache();\n  const link = new HttpLink({\n    uri: \"http://localhost:4000/graphql\"\n  });\n  const client = new ApolloClient({\n    cache,\n    link\n  });\n  const clientEmail = {\n    email: \"\"\n  };\n  const requestSlot = useRequestSlot(); // requestSlot() is a function that you call to make the request.\n  // Initially, you can dummy it out like this:\n\n  function useRequestSlot() {} //return () => Promise.resolve();\n  //when the backend is ready, you can change it to something like:\n  // function useRequestSlot(): (time: number) => Promise<boolean> {\n  //     const mutate = useMutation(RequestSlot);\n  //     return (time:number) => mutate({variables: { time } });\n  // }\n  // TODO insert accesstoken string here\n\n\n  let accessToken;\n\n  const onSubmit = data => {\n    console.log(data);\n    console.log(data.firstName);\n    console.log(data.email);\n    clientEmail.email = data.email;\n\n    if (!/^[a-zA-Z0-9]+[a-zA-Z0-9_.]*@[a-zA-Z0-9]+.[A-Za-z]+$/.test(data.email)) {\n      window.alert(\"invalid email\");\n    } else {\n      //setReadyToSend(true);\n      initiate();\n      props.history.push(\"/confirmation\");\n    }\n  };\n\n  function ISODateString(d) {\n    function pad(n) {\n      return n < 10 ? \"0\" + n : n;\n    }\n\n    return d.getFullYear() + \"-\" + pad(d.getMonth() + 1) + \"-\" + pad(d.getDate()) + \"T\" + pad(d.getHours()) + \":\" + pad(d.getMinutes()) + \":\" + pad(d.getSeconds()) + \"-\" + pad(d.getTimezoneOffset() / 60) + \":00\";\n  } // ________________________________________________________________________________________\n\n\n  function initiate() {\n    gapi.load(\"client:auth2\", initClient);\n  }\n\n  function initClient() {\n    // const values = {\n    //   'client_id': config.config.clientId,\n    //   'scope': config.config.scope,\n    // }\n    // gapi.auth2.authorize(values, function() {\n    //   console.log('login complete');\n    //   console.log(gapi.auth.getToken());\n    // });\n    //\n    gapi.client.init({\n      apiKey: config.config.apiKey,\n      clientId: config.config.clientId,\n      discoveryDocs: config.config.discoveryDocs,\n      scope: config.config.scope\n    }).then(function () {\n      // Listen for sign-in state changes.\n      // gapi.auth2.authorize;\n      // gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus);\n      // updateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get());\n      gapi.client.setToken({\n        access_token: accessToken\n      });\n    }, function (error) {\n      console.log(\"An errot in update\"); //appendPre(JSON.stringify(error, null, 2));\n    }).then(function () {\n      accessUserOffline();\n    });\n  }\n\n  function updateSigninStatus(isSignedIn) {\n    if (isSignedIn) {\n      console.log(\"SIGNED IN\");\n    } else {\n      console.log(\"SIGNED OUT\"); // getUsersCalendarList(\n      //   \"ya29.a0AfH6SMDsk-PBxuG0etR5n4CdEN7K8JFCam6zIA4vEEcZ71qYENWBV8SuP1XoktDhmhTlCMhrteGWUchJExi6_oO-6c2RbWylklmwUvDZM2EwpSNl1iALYgMMxKA0u0_7KQ1AFxprea4RUiTlOseqAjIPGA6H7gd0FQM\"\n      // );\n    }\n\n    accessUserOffline();\n  } // *****************************'\n\n\n  async function getUsersCalendarList(accessToken) {\n    let calendarsList = await fetch(\"https://www.googleapis.com/auth/calendar.events\", {\n      method: \"get\",\n      headers: {\n        Authorization: `Bearer ${accessToken}`\n      }\n    }).then(response => response.json()).then(json => console.log(json)); // return calendarsList.json();\n    // console.log(calendarsList.json());\n  } // ________________________________________________________________________________________\n\n\n  const endTimeSchedule = new Date(scheduledDate.getTime() + 60 * 1000 * meetingInfo.duration);\n  const start = scheduledDate.toString();\n  const end = endTimeSchedule.toString();\n  const timeZone = scheduledDate.getTimezoneOffset().toString();\n  console.log(start);\n  console.log(end);\n  console.log(timeZone);\n\n  function accessUserOffline() {\n    const event = {\n      summary: \"Meeting with \" + HostInfo.firstname + \" \" + HostInfo.lastname,\n      location: \"Online\",\n      description: \"You have been invited to this Meeting\",\n      start: {\n        // date: scheduledDate.toISOString(),\n        dateTime: ISODateString(scheduledDate),\n        timeZone: \"Etc/UTC\"\n      },\n      end: {\n        // date: scheduledDate.toISOString(),\n        dateTime: ISODateString(new Date(scheduledDate.getTime() + 60 * 1000 * meetingInfo.duration)),\n        timeZone: \"Etc/UTC\"\n      },\n      recurrence: [\"RRULE:FREQ=DAILY;COUNT=1\"],\n      attendees: [{\n        email: clientEmail.email\n      }],\n      visibility: \"default\",\n      reminders: {\n        useDefault: false,\n        overrides: [{\n          method: \"email\",\n          minutes: 24 * 60\n        }, {\n          method: \"popup\",\n          minutes: 10\n        }]\n      }\n    };\n    gapi.client.calendar.events.insert({\n      calendarId: \"primary\",\n      resource: event,\n      sendNotifications: true,\n      sendUpdates: \"all\"\n    }).execute(function (event) {\n      console.log(\"Event created: \" + event.status);\n      return true;\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"body\", {\n    style: {\n      background: \"rgba(131, 196, 197)\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TopFormat, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LogoCard, {\n    id: \"logo\",\n    src: logo,\n    alt: \"Meeting Ground Logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      justifyContent: \"center\",\n      alignContent: \"center\",\n      display: \"flex\",\n      flexDirection: \"row\",\n      borderTop: \"5px solid grey\",\n      margin: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      // position: \"relative\",\n      margin: 0,\n      // float: \"left\",\n      // left: \"15%\",\n      justifyContent: \"center\",\n      top: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 13\n    }\n  }, \"Submit Info Page\"))), /*#__PURE__*/React.createElement(MainBodyFormat, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      margin: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 11\n    }\n  }, \" \", \"Your scheduled date is \", scheduledDate.toString()), /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      margin: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 11\n    }\n  }, \" \", \"Please input your information below to confirm your meeting.\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"firstName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 15\n    }\n  }, \"First Name\", /*#__PURE__*/React.createElement(Inputformat, {\n    name: \"firstName\",\n    id: \"firstName\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"lastName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 15\n    }\n  }, \"Last Name\", /*#__PURE__*/React.createElement(Inputformat, {\n    name: \"lastName\",\n    id: \"lastName\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 15\n    }\n  }, \"Email Address\"), /*#__PURE__*/React.createElement(Inputformat, {\n    name: \"email\",\n    id: \"email\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"comments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 15\n    }\n  }, \"Comments/Questions?\"), /*#__PURE__*/React.createElement(Inputformat, {\n    name: \"comments\",\n    id: \"comments\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 15\n    }\n  }, \"Submit Info\")))), true && /*#__PURE__*/React.createElement(ApolloProvider, {\n    client: client,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(GetHostEmail, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"pre\", {\n    id: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst HostInfo = {\n  code: \"\",\n  firstname: \"\",\n  lastname: \"\"\n};\n\nfunction GetHostEmail() {\n  const [tempdata, setdata] = useState();\n  const {\n    loading: loadingEmail,\n    error: errorEmail,\n    data: dataEmail\n  } = useQuery(GET_HOST_EMAIL, {\n    variables: {\n      id: urlId.urlid\n    }\n  });\n  loadingEmail ? console.log(\"loading Email\") : errorEmail ? console.log(\"An Error occurred:\" + {\n    errorEmail\n  }) : (meetingInfo.hostEmail = dataEmail.link.email) && (meetingInfo.duration = dataEmail.link.duration);\n  console.log(meetingInfo.hostEmail);\n  const {\n    loading: loadingCode,\n    error: errorCode,\n    data: dataCode\n  } = useQuery(GET_GOA_CODE, {\n    variables: {\n      id: meetingInfo.hostEmail\n    }\n  });\n  loadingCode ? console.log(\"loading access\") : errorCode ? console.log(\"An Error occurred:\" + {\n    errorCode\n  }) : (HostInfo.code = dataCode.email.goa_code) && (HostInfo.firstname = dataCode.email.firstname) && (HostInfo.lastname = dataCode.email.lastname);\n  console.log(HostInfo.code);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 10\n    }\n  }, \"the Email is authentified\");\n}\n\nconst GET_HOST_EMAIL = gql`\n  query($id: String) {\n    link(id: $id) {\n      email\n      duration\n    }\n  }\n`;\nconst GET_GOA_CODE = gql`\n  query($id: String) {\n    email(id: $id) {\n      goa_code\n      firstname\n      lastname\n    }\n  }\n`;\nexport default SubmitInfoPage;","map":{"version":3,"sources":["/Users/kimberlyzhu/Documents/MeetingGround/src/pages/submitInfo.tsx"],"names":["useForm","styled","logo","React","useState","useQuery","gql","ApolloClient","InMemoryCache","HttpLink","ApolloProvider","config","LogoCard","img","TopFormat","div","MainBodyFormat","Inputformat","input","meetingInfo","hostEmail","duration","urlId","urlid","SubmitInfoPage","props","id","match","params","scheduledDate","Date","time","replace","register","handleSubmit","defaultValues","firstName","lastName","email","comments","cache","link","uri","client","clientEmail","requestSlot","useRequestSlot","accessToken","onSubmit","data","console","log","test","window","alert","initiate","history","push","ISODateString","d","pad","n","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getTimezoneOffset","gapi","load","initClient","init","apiKey","clientId","discoveryDocs","scope","then","setToken","access_token","error","accessUserOffline","updateSigninStatus","isSignedIn","getUsersCalendarList","calendarsList","fetch","method","headers","Authorization","response","json","endTimeSchedule","getTime","start","toString","end","timeZone","event","summary","HostInfo","firstname","lastname","location","description","dateTime","recurrence","attendees","visibility","reminders","useDefault","overrides","minutes","calendar","events","insert","calendarId","resource","sendNotifications","sendUpdates","execute","status","background","padding","justifyContent","alignContent","display","flexDirection","borderTop","margin","top","code","GetHostEmail","tempdata","setdata","loading","loadingEmail","errorEmail","dataEmail","GET_HOST_EMAIL","variables","loadingCode","errorCode","dataCode","GET_GOA_CODE","goa_code"],"mappings":"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","sourcesContent":["/*users.jsx*/\nimport useForm from \"react-hook-form\";\nimport { RouteComponentProps } from \"react-router-dom\";\n//You have to use the link component to link between you pages\n\nimport styled from \"@emotion/styled\";\nimport logo from \"./img/meetingGroundLogo.png\";\nimport { Link } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\n// yarn add react-hook-form\n//You have to use the link component to link between you pages\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport { ApolloClient } from \"apollo-client\";\nimport { InMemoryCache, NormalizedCacheObject } from \"apollo-cache-inmemory\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { ApolloProvider } from \"react-apollo\";\nimport * as config from \"../apiGoogleconfig.json\";\nimport ScheduleCard from \"./ScheduleCard/component\";\n\ninterface SubmitPagePropsInterface\n  extends RouteComponentProps<{ id: string; time: string }> {\n  // Other props that belong to component it self not Router\n}\nconst LogoCard = styled.img`\n  width: 450px;\n  height: 100px;\n  justify-content: space-around;\n  float: left;\n`;\n\nconst TopFormat = styled.div`\n  margin: 0 auto;\n  width: 100%;\n  overflow: auto;\n  display: inline-block;\n  background: white;\n  border-radius: 25px;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n`;\n\nconst MainBodyFormat = styled.div`\n  margin: 0 auto;\n  align-items: center;\n  background: white;\n  display: flex;\n  flex-direction: column;\n  height: 650px;\n  border-radius: 25px;\n`;\n\nconst Inputformat = styled.input`\n  width: 100%;\n  padding: 10px 20px;\n  margin: 8px 0;\n  display: inline-block;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  box-sizing: border-box;\n`;\n\nconst meetingInfo: {\n  hostEmail: string;\n  duration: number;\n} = {\n  hostEmail: \"\",\n  duration: 0,\n};\n\nconst urlId: {\n  urlid: string;\n} = {\n  urlid: \"\",\n};\n\nconst SubmitInfoPage: React.FC<SubmitPagePropsInterface> = (\n  props: SubmitPagePropsInterface\n) => {\n  const id = props.match.params.id; //link id\n  const scheduledDate = new Date(props.match.params.time.replace(\"%20\", \"\"));\n  urlId.urlid = id;\n\n  const { register, handleSubmit } = useForm({\n    defaultValues: {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      comments: \"\",\n    },\n  });\n\n  const cache = new InMemoryCache();\n  const link = new HttpLink({\n    uri: \"http://localhost:4000/graphql\",\n  });\n\n  const client: ApolloClient<NormalizedCacheObject> = new ApolloClient({\n    cache,\n    link,\n  });\n\n  const clientEmail: {\n    email: string;\n  } = {\n    email: \"\",\n  };\n\n  const requestSlot = useRequestSlot();\n  // requestSlot() is a function that you call to make the request.\n  // Initially, you can dummy it out like this:\n  function useRequestSlot(): (time: number) => Promise<boolean> {\n    //return () => Promise.resolve();\n  }\n  //when the backend is ready, you can change it to something like:\n  // function useRequestSlot(): (time: number) => Promise<boolean> {\n  //     const mutate = useMutation(RequestSlot);\n  //     return (time:number) => mutate({variables: { time } });\n  // }\n\n  // TODO insert accesstoken string here\n  let accessToken: string;\n  const onSubmit = (data: any) => {\n    console.log(data);\n    console.log(data.firstName);\n    console.log(data.email);\n    clientEmail.email = data.email;\n    if (\n      !/^[a-zA-Z0-9]+[a-zA-Z0-9_.]*@[a-zA-Z0-9]+.[A-Za-z]+$/.test(data.email)\n    ) {\n      window.alert(\"invalid email\");\n    } else {\n      //setReadyToSend(true);\n      initiate();\n      props.history.push(\"/confirmation\");\n    }\n  };\n\n  function ISODateString(d: Date) {\n    function pad(n: number) {\n      return n < 10 ? \"0\" + n : n;\n    }\n    return (\n      d.getFullYear() +\n      \"-\" +\n      pad(d.getMonth() + 1) +\n      \"-\" +\n      pad(d.getDate()) +\n      \"T\" +\n      pad(d.getHours()) +\n      \":\" +\n      pad(d.getMinutes()) +\n      \":\" +\n      pad(d.getSeconds()) +\n      \"-\" +\n      pad(d.getTimezoneOffset() / 60) +\n      \":00\"\n    );\n  }\n\n  // ________________________________________________________________________________________\n  function initiate() {\n    gapi.load(\"client:auth2\", initClient);\n  }\n\n  function initClient() {\n    // const values = {\n    //   'client_id': config.config.clientId,\n    //   'scope': config.config.scope,\n    // }\n    // gapi.auth2.authorize(values, function() {\n    //   console.log('login complete');\n    //   console.log(gapi.auth.getToken());\n    // });\n    //\n    gapi.client\n      .init({\n        apiKey: config.config.apiKey,\n        clientId: config.config.clientId,\n        discoveryDocs: config.config.discoveryDocs,\n        scope: config.config.scope,\n      })\n      .then(\n        function () {\n          // Listen for sign-in state changes.\n          // gapi.auth2.authorize;\n\n          // gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus);\n          // updateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get());\n          gapi.client.setToken({\n            access_token: accessToken,\n          });\n        },\n        function (error: any) {\n          console.log(\"An errot in update\");\n          //appendPre(JSON.stringify(error, null, 2));\n        }\n      )\n      .then(function () {\n        accessUserOffline();\n      });\n  }\n  function updateSigninStatus(isSignedIn: boolean) {\n    if (isSignedIn) {\n      console.log(\"SIGNED IN\");\n    } else {\n      console.log(\"SIGNED OUT\");\n      // getUsersCalendarList(\n      //   \"ya29.a0AfH6SMDsk-PBxuG0etR5n4CdEN7K8JFCam6zIA4vEEcZ71qYENWBV8SuP1XoktDhmhTlCMhrteGWUchJExi6_oO-6c2RbWylklmwUvDZM2EwpSNl1iALYgMMxKA0u0_7KQ1AFxprea4RUiTlOseqAjIPGA6H7gd0FQM\"\n      // );\n    }\n    accessUserOffline();\n  }\n\n  // *****************************'\n  async function getUsersCalendarList(accessToken: any) {\n    let calendarsList = await fetch(\n      \"https://www.googleapis.com/auth/calendar.events\",\n      {\n        method: \"get\",\n        headers: { Authorization: `Bearer ${accessToken}` },\n      }\n    )\n      .then((response) => response.json())\n      .then((json) => console.log(json));\n    // return calendarsList.json();\n    // console.log(calendarsList.json());\n  }\n\n  // ________________________________________________________________________________________\n  const endTimeSchedule: Date = new Date(\n    scheduledDate.getTime() + 60 * 1000 * meetingInfo.duration\n  );\n  const start: string = scheduledDate.toString();\n  const end: string = endTimeSchedule.toString();\n  const timeZone: string = scheduledDate.getTimezoneOffset().toString();\n  console.log(start);\n  console.log(end);\n  console.log(timeZone);\n\n  function accessUserOffline() {\n    const event = {\n      summary: \"Meeting with \" + HostInfo.firstname + \" \" + HostInfo.lastname,\n      location: \"Online\",\n      description: \"You have been invited to this Meeting\",\n      start: {\n        // date: scheduledDate.toISOString(),\n        dateTime: ISODateString(scheduledDate),\n        timeZone: \"Etc/UTC\",\n      },\n      end: {\n        // date: scheduledDate.toISOString(),\n        dateTime: ISODateString(\n          new Date(scheduledDate.getTime() + 60 * 1000 * meetingInfo.duration)\n        ),\n        timeZone: \"Etc/UTC\",\n      },\n      recurrence: [\"RRULE:FREQ=DAILY;COUNT=1\"],\n      attendees: [{ email: clientEmail.email }],\n      visibility: \"default\",\n      reminders: {\n        useDefault: false,\n        overrides: [\n          { method: \"email\", minutes: 24 * 60 },\n          { method: \"popup\", minutes: 10 },\n        ],\n      },\n    };\n\n    gapi.client.calendar.events\n      .insert({\n        calendarId: \"primary\",\n        resource: event,\n        sendNotifications: true,\n        sendUpdates: \"all\",\n      })\n      .execute(function (event) {\n        console.log(\"Event created: \" + event.status);\n        return true;\n      });\n  }\n\n  return (\n    <body style={{ background: \"rgba(131, 196, 197)\" }}>\n      <div style={{ padding: \"1rem\" }}>\n        <TopFormat>\n          <LogoCard id=\"logo\" src={logo} alt=\"Meeting Ground Logo\" />\n\n          <div\n            style={{\n              justifyContent: \"center\",\n              alignContent: \"center\",\n              display: \"flex\",\n              flexDirection: \"row\",\n              borderTop: \"5px solid grey\",\n              margin: 5,\n            }}\n          >\n            <h1\n              style={{\n                // position: \"relative\",\n                margin: 0,\n                // float: \"left\",\n                // left: \"15%\",\n                justifyContent: \"center\",\n                top: 20,\n              }}\n            >\n              Submit Info Page\n            </h1>\n          </div>\n        </TopFormat>\n        <MainBodyFormat>\n          <h3 style={{ margin: 20 }}>\n            {\" \"}\n            Your scheduled date is {scheduledDate.toString()}\n          </h3>\n\n          <h4 style={{ margin: 20 }}>\n            {\" \"}\n            Please input your information below to confirm your meeting.\n          </h4>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n              <label htmlFor=\"firstName\">\n                First Name\n                <Inputformat name=\"firstName\" id=\"firstName\" ref={register} />\n                {/* <input\n                name=\"firstName\"\n                id=\"firstName\"\n                ref={register}\n                style={{\n                  width: \"100%\",\n                  padding: \"12px 20px\",\n                  margin: \"8px 0\",\n                  display: \"inline-block\",\n                  border: \"1px solid #ccc\",\n                  borderRadius: \"4px\",\n                  boxSizing: \"border-box\",\n                }}\n              /> */}\n              </label>\n\n              <label htmlFor=\"lastName\">\n                Last Name\n                <Inputformat name=\"lastName\" id=\"lastName\" ref={register} />\n              </label>\n            </div>\n\n            <div>\n              <label htmlFor=\"email\">Email Address</label>\n              <Inputformat name=\"email\" id=\"email\" ref={register} />\n            </div>\n\n            <div>\n              <label htmlFor=\"comments\">Comments/Questions?</label>\n              <Inputformat name=\"comments\" id=\"comments\" ref={register} />\n            </div>\n\n            <div\n              className=\"form-group\"\n              style={{ display: \"flex\", flexDirection: \"column\" }}\n            >\n              <button type=\"submit\" className=\"btn btn-primary\">\n                Submit Info\n              </button>\n            </div>\n          </form>\n        </MainBodyFormat>\n        {true && (\n          <ApolloProvider client={client}>\n            <GetHostEmail />\n          </ApolloProvider>\n        )}\n        <pre id=\"content\"></pre>\n      </div>\n    </body>\n  );\n};\n\nconst HostInfo: {\n  firstname: string;\n  lastname: string;\n  code: string;\n} = {\n  code: \"\",\n  firstname: \"\",\n  lastname: \"\",\n};\n\nfunction GetHostEmail() {\n  const [tempdata, setdata] = useState<any>();\n  const {\n    loading: loadingEmail,\n    error: errorEmail,\n    data: dataEmail,\n  } = useQuery(GET_HOST_EMAIL, {\n    variables: { id: urlId.urlid },\n  });\n\n  loadingEmail\n    ? console.log(\"loading Email\")\n    : errorEmail\n    ? console.log(\"An Error occurred:\" + { errorEmail })\n    : (meetingInfo.hostEmail = dataEmail.link.email) &&\n      (meetingInfo.duration = dataEmail.link.duration);\n\n  console.log(meetingInfo.hostEmail);\n\n  const { loading: loadingCode, error: errorCode, data: dataCode } = useQuery(\n    GET_GOA_CODE,\n    {\n      variables: { id: meetingInfo.hostEmail },\n    }\n  );\n\n  loadingCode\n    ? console.log(\"loading access\")\n    : errorCode\n    ? console.log(\"An Error occurred:\" + { errorCode })\n    : (HostInfo.code = dataCode.email.goa_code) &&\n      (HostInfo.firstname = dataCode.email.firstname) &&\n      (HostInfo.lastname = dataCode.email.lastname);\n\n  console.log(HostInfo.code);\n\n  return <div>the Email is authentified</div>;\n}\n\nconst GET_HOST_EMAIL = gql`\n  query($id: String) {\n    link(id: $id) {\n      email\n      duration\n    }\n  }\n`;\n\nconst GET_GOA_CODE = gql`\n  query($id: String) {\n    email(id: $id) {\n      goa_code\n      firstname\n      lastname\n    }\n  }\n`;\n\nexport default SubmitInfoPage;\n"]},"metadata":{},"sourceType":"module"}