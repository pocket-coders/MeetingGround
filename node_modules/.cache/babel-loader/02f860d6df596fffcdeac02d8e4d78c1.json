{"ast":null,"code":"function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { print } from 'graphql/language/printer';\nimport { objToKey } from './utils';\nvar cachedQueriesByClient = new WeakMap();\nexport function getCachedObservableQuery(client, options) {\n  var queriesForClient = getCachedQueriesForClient(client);\n  var cacheKey = getCacheKey(options);\n  var observableQuery = queriesForClient.get(cacheKey);\n\n  if (observableQuery == null) {\n    observableQuery = client.watchQuery(options);\n    queriesForClient.set(cacheKey, observableQuery);\n  }\n\n  return observableQuery;\n}\nexport function invalidateCachedObservableQuery(client, options) {\n  var queriesForClient = getCachedQueriesForClient(client);\n  var cacheKey = getCacheKey(options);\n  queriesForClient[\"delete\"](cacheKey);\n}\n\nfunction getCachedQueriesForClient(client) {\n  var queriesForClient = cachedQueriesByClient.get(client);\n\n  if (queriesForClient == null) {\n    queriesForClient = new Map();\n    cachedQueriesByClient.set(client, queriesForClient);\n  }\n\n  return queriesForClient;\n}\n\nfunction getCacheKey(_ref) {\n  var query = _ref.query,\n      options = _objectWithoutPropertiesLoose(_ref, [\"query\"]);\n\n  return print(query) + \"@@\" + objToKey(options);\n}","map":{"version":3,"sources":["/Users/talbachar/Desktop/MeetingGround/node_modules/react-apollo-hooks/es/queryCache.js"],"names":["_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","Object","keys","key","i","length","indexOf","print","objToKey","cachedQueriesByClient","WeakMap","getCachedObservableQuery","client","options","queriesForClient","getCachedQueriesForClient","cacheKey","getCacheKey","observableQuery","get","watchQuery","set","invalidateCachedObservableQuery","Map","_ref","query"],"mappings":"AAAA,SAASA,6BAAT,CAAuCC,MAAvC,EAA+CC,QAA/C,EAAyD;AAAE,MAAID,MAAM,IAAI,IAAd,EAAoB,OAAO,EAAP;AAAW,MAAIE,MAAM,GAAG,EAAb;AAAiB,MAAIC,UAAU,GAAGC,MAAM,CAACC,IAAP,CAAYL,MAAZ,CAAjB;AAAsC,MAAIM,GAAJ,EAASC,CAAT;;AAAY,OAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGJ,UAAU,CAACK,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AAAED,IAAAA,GAAG,GAAGH,UAAU,CAACI,CAAD,CAAhB;AAAqB,QAAIN,QAAQ,CAACQ,OAAT,CAAiBH,GAAjB,KAAyB,CAA7B,EAAgC;AAAUJ,IAAAA,MAAM,CAACI,GAAD,CAAN,GAAcN,MAAM,CAACM,GAAD,CAApB;AAA4B;;AAAC,SAAOJ,MAAP;AAAgB;;AAEnT,SAASQ,KAAT,QAAsB,0BAAtB;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,IAAIC,qBAAqB,GAAG,IAAIC,OAAJ,EAA5B;AACA,OAAO,SAASC,wBAAT,CAAkCC,MAAlC,EAA0CC,OAA1C,EAAmD;AACxD,MAAIC,gBAAgB,GAAGC,yBAAyB,CAACH,MAAD,CAAhD;AACA,MAAII,QAAQ,GAAGC,WAAW,CAACJ,OAAD,CAA1B;AACA,MAAIK,eAAe,GAAGJ,gBAAgB,CAACK,GAAjB,CAAqBH,QAArB,CAAtB;;AAEA,MAAIE,eAAe,IAAI,IAAvB,EAA6B;AAC3BA,IAAAA,eAAe,GAAGN,MAAM,CAACQ,UAAP,CAAkBP,OAAlB,CAAlB;AACAC,IAAAA,gBAAgB,CAACO,GAAjB,CAAqBL,QAArB,EAA+BE,eAA/B;AACD;;AAED,SAAOA,eAAP;AACD;AACD,OAAO,SAASI,+BAAT,CAAyCV,MAAzC,EAAiDC,OAAjD,EAA0D;AAC/D,MAAIC,gBAAgB,GAAGC,yBAAyB,CAACH,MAAD,CAAhD;AACA,MAAII,QAAQ,GAAGC,WAAW,CAACJ,OAAD,CAA1B;AACAC,EAAAA,gBAAgB,CAAC,QAAD,CAAhB,CAA2BE,QAA3B;AACD;;AAED,SAASD,yBAAT,CAAmCH,MAAnC,EAA2C;AACzC,MAAIE,gBAAgB,GAAGL,qBAAqB,CAACU,GAAtB,CAA0BP,MAA1B,CAAvB;;AAEA,MAAIE,gBAAgB,IAAI,IAAxB,EAA8B;AAC5BA,IAAAA,gBAAgB,GAAG,IAAIS,GAAJ,EAAnB;AACAd,IAAAA,qBAAqB,CAACY,GAAtB,CAA0BT,MAA1B,EAAkCE,gBAAlC;AACD;;AAED,SAAOA,gBAAP;AACD;;AAED,SAASG,WAAT,CAAqBO,IAArB,EAA2B;AACzB,MAAIC,KAAK,GAAGD,IAAI,CAACC,KAAjB;AAAA,MACIZ,OAAO,GAAGjB,6BAA6B,CAAC4B,IAAD,EAAO,CAAC,OAAD,CAAP,CAD3C;;AAGA,SAAOjB,KAAK,CAACkB,KAAD,CAAL,GAAe,IAAf,GAAsBjB,QAAQ,CAACK,OAAD,CAArC;AACD","sourcesContent":["function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { print } from 'graphql/language/printer';\nimport { objToKey } from './utils';\nvar cachedQueriesByClient = new WeakMap();\nexport function getCachedObservableQuery(client, options) {\n  var queriesForClient = getCachedQueriesForClient(client);\n  var cacheKey = getCacheKey(options);\n  var observableQuery = queriesForClient.get(cacheKey);\n\n  if (observableQuery == null) {\n    observableQuery = client.watchQuery(options);\n    queriesForClient.set(cacheKey, observableQuery);\n  }\n\n  return observableQuery;\n}\nexport function invalidateCachedObservableQuery(client, options) {\n  var queriesForClient = getCachedQueriesForClient(client);\n  var cacheKey = getCacheKey(options);\n  queriesForClient[\"delete\"](cacheKey);\n}\n\nfunction getCachedQueriesForClient(client) {\n  var queriesForClient = cachedQueriesByClient.get(client);\n\n  if (queriesForClient == null) {\n    queriesForClient = new Map();\n    cachedQueriesByClient.set(client, queriesForClient);\n  }\n\n  return queriesForClient;\n}\n\nfunction getCacheKey(_ref) {\n  var query = _ref.query,\n      options = _objectWithoutPropertiesLoose(_ref, [\"query\"]);\n\n  return print(query) + \"@@\" + objToKey(options);\n}"]},"metadata":{},"sourceType":"module"}